{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst inputfield = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst showdays = document.querySelector('[data-days]');\nconst showhours = document.querySelector('[data-hours]');\nconst showminutes = document.querySelector('[data-minutes]');\nconst showseconds = document.querySelector('[data-seconds]');\nstartBtn.disabled = true;\n\nstartBtn.addEventListener('click', () => {\n  timer.start();\n  startBtn.disabled = true;\n  inputfield.disabled = true;\n});\n\nconst options = {\n  altInput: true,\n  altFormat: \"F j, Y\",\n  dateFormat: \"Y-m-d\",\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    const userDate = new Date(selectedDates[0]).getTime();\n    const startDate = Date.now();\n\n    if (userDate > startDate) {\n      startBtn.disabled = false;\n      delta = userDate - startDate;\n      const { days, hours, minutes, seconds } = convertMs(delta);\n      showdays.textContent = days;\n      showhours.textContent = hours;\n      showminutes.textContent = minutes;\n      showseconds.textContent = seconds;\n    } else {\n      iziToast.error({\n        fontSize: 'large',\n        close: false,\n        position: 'topRight',\n        messageColor: 'white',\n        timeout: 2000,\n        backgroundColor: 'red',\n        message: \"Please choose a date in the future\"\n      });\n    }\n  }\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nclass Timer {\n\n  constructor({ onTick }) {\n    this.onTick = onTick;\n    this.interval = null;\n  }\n\n  start() {\n    this.interval = setInterval(() => {\n      delta -= 1000;\n      const time = convertMs(delta);\n      this.onTick(time);\n      if (delta <= 0) {\n        this.stop();\n        showdays.textContent = '00';\n        showhours.textContent = '00';\n        showminutes.textContent = '00';\n        showseconds.textContent = '00';\n      }\n    }, 1000);\n  }\n\n  stop() {\n    clearInterval(this.interval);\n    inputfield.disabled = false;\n  }\n\n  pad(value) {\n    return String(value).padStart(2, \"0\");\n  }\n\n}\n\nlet delta = 0;\n\nconst timer = new Timer({\n  onTick: updateClockface,\n});\n\nfunction updateClockface({ days, hours, minutes, seconds }) {\n  showdays.textContent = timer.pad(days);\n  showhours.textContent = timer.pad(hours);\n  showminutes.textContent = timer.pad(minutes);\n  showseconds.textContent = timer.pad(seconds);\n}"],"names":["inputfield","startBtn","showdays","showhours","showminutes","showseconds","timer","options","selectedDates","userDate","startDate","delta","days","hours","minutes","seconds","convertMs","iziToast","flatpickr","ms","Timer","onTick","time","value","updateClockface"],"mappings":"2FAMA,MAAMA,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAC3DJ,EAAS,SAAW,GAEpBA,EAAS,iBAAiB,QAAS,IAAM,CACvCK,EAAM,MAAK,EACXL,EAAS,SAAW,GACpBD,EAAW,SAAW,EACxB,CAAC,EAED,MAAMO,EAAU,CACd,SAAU,GACV,UAAW,SACX,WAAY,QACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACrB,MAAMC,EAAW,IAAI,KAAKD,EAAc,CAAC,CAAC,EAAE,UACtCE,EAAY,KAAK,MAEvB,GAAID,EAAWC,EAAW,CACxBT,EAAS,SAAW,GACpBU,EAAQF,EAAWC,EACnB,KAAM,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAK,EACzDT,EAAS,YAAcU,EACvBT,EAAU,YAAcU,EACxBT,EAAY,YAAcU,EAC1BT,EAAY,YAAcU,CAChC,MACME,EAAS,MAAM,CACb,SAAU,QACV,MAAO,GACP,SAAU,WACV,aAAc,QACd,QAAS,IACT,gBAAiB,MACjB,QAAS,oCACjB,CAAO,CAEJ,CACH,EAEAC,EAAU,mBAAoBX,CAAO,EAErC,SAASS,EAAUG,EAAI,CAQrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAE1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EAEpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EAEjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMK,CAAM,CAEV,YAAY,CAAE,OAAAC,GAAU,CACtB,KAAK,OAASA,EACd,KAAK,SAAW,IACjB,CAED,OAAQ,CACN,KAAK,SAAW,YAAY,IAAM,CAChCV,GAAS,IACT,MAAMW,EAAON,EAAUL,CAAK,EAC5B,KAAK,OAAOW,CAAI,EACZX,GAAS,IACX,KAAK,KAAI,EACTT,EAAS,YAAc,KACvBC,EAAU,YAAc,KACxBC,EAAY,YAAc,KAC1BC,EAAY,YAAc,KAE7B,EAAE,GAAI,CACR,CAED,MAAO,CACL,cAAc,KAAK,QAAQ,EAC3BL,EAAW,SAAW,EACvB,CAED,IAAIuB,EAAO,CACT,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CAEH,CAEA,IAAIZ,EAAQ,EAEZ,MAAML,EAAQ,IAAIc,EAAM,CACtB,OAAQI,CACV,CAAC,EAED,SAASA,EAAgB,CAAE,KAAAZ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC1Db,EAAS,YAAcI,EAAM,IAAIM,CAAI,EACrCT,EAAU,YAAcG,EAAM,IAAIO,CAAK,EACvCT,EAAY,YAAcE,EAAM,IAAIQ,CAAO,EAC3CT,EAAY,YAAcC,EAAM,IAAIS,CAAO,CAC7C"}